/*
    This file was generated automatically by Alchitry Labs 2.0.28-BETA.
    Do not edit this file directly. Instead edit the original Lucid source.
    This is a temporary file and any changes made to it will be destroyed.
*/

module adder #(
        parameter SIZE = 3'h4
    ) (
        input wire clk,
        input wire rst,
        input wire [(SIZE)-1:0] a,
        input wire [(SIZE)-1:0] b,
        input wire [0:0] subtract,
        output reg [(SIZE)-1:0] s,
        output reg [0:0] v,
        output reg [0:0] n,
        output reg [0:0] z
    );
    logic signed [(SIZE)-1:0] sum_result;
    logic [0:0] overflow;
    always @* begin
        sum_result = (subtract == 1'h0 ? a + b : a - b);
        s = $signed(sum_result);
        if (a[SIZE - 1'h1] == 1'h1 && b[SIZE - 1'h1] == 1'h1) begin
            overflow = 1'h1;
        end else begin
            if ((a[SIZE - 2'h2] == 1'h1 || b[SIZE - 2'h2] == 1'h1) && sum_result[SIZE - 2'h2] != 1'h1) begin
                overflow = 1'h1;
            end else begin
                overflow = 1'h0;
            end
        end
        v = overflow;
        n = sum_result[SIZE - 1'h1];
        z = ~(|$signed(sum_result));
    end
    
    
endmodule